/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HrInitiative as PrismaHrInitiative,
  Budget as PrismaBudget,
} from "@prisma/client";

export class HrInitiativeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HrInitiativeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hrInitiative.count(args);
  }

  async hrInitiatives<T extends Prisma.HrInitiativeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HrInitiativeFindManyArgs>
  ): Promise<PrismaHrInitiative[]> {
    return this.prisma.hrInitiative.findMany<Prisma.HrInitiativeFindManyArgs>(
      args
    );
  }
  async hrInitiative<T extends Prisma.HrInitiativeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HrInitiativeFindUniqueArgs>
  ): Promise<PrismaHrInitiative | null> {
    return this.prisma.hrInitiative.findUnique(args);
  }
  async createHrInitiative<T extends Prisma.HrInitiativeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HrInitiativeCreateArgs>
  ): Promise<PrismaHrInitiative> {
    return this.prisma.hrInitiative.create<T>(args);
  }
  async updateHrInitiative<T extends Prisma.HrInitiativeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HrInitiativeUpdateArgs>
  ): Promise<PrismaHrInitiative> {
    return this.prisma.hrInitiative.update<T>(args);
  }
  async deleteHrInitiative<T extends Prisma.HrInitiativeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HrInitiativeDeleteArgs>
  ): Promise<PrismaHrInitiative> {
    return this.prisma.hrInitiative.delete(args);
  }

  async getBudget(parentId: string): Promise<PrismaBudget | null> {
    return this.prisma.hrInitiative
      .findUnique({
        where: { id: parentId },
      })
      .budget();
  }
}
